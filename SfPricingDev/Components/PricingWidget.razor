@using SfPricingDev.Helpers;
@using Syncfusion
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Lists;
@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.Inputs
@using SfPricingDev.Models

<style>
    .pricing-plans {
        display: flex;
        justify-content: space-around;
        padding: 20px;
    }

    .plan {
        width: 320px;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .benefits-container {
        display: inline-block;
        text-align: left;
        max-width: 100%;
    }

    .benefit,
    .benefit * {
        font-size: 22px;
        text-align: left;
    }

    .best-value {
        border-color: #007bff;
    }

    .price {
        font-size: 30px;
        font-weight: bold;
        color: #333;
    }

        .price span {
            font-size: 20px;
            color: #666;
        }

    button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        text-transform: uppercase;
        border-radius: 5px;
        cursor: pointer;
    }

        button:hover {
            background-color: #0056b3;
        }

    .e-tooltip-wrap.e-popup {
        background-color: #fff;
        border: 2px solid #000;
        background: black;
    }

    .e-tooltip-wrap .e-tip-content {
        color: white;
        text-align: center;
        font-size: 18px;
        line-height: 24px;
    }

    .e-tooltip-wrap .e-arrow-tip-inner.e-tip-bottom {
        color: black;
    }

    .e-tooltip-wrap .e-arrow-tip-outer.e-tip-bottom {
        border-left: 12px solid transparent;
        border-right: 14px solid transparent;
        border-top: 12px solid black;
    }

    .e-tooltip-wrap {
        max-width: 290px;
    }

    .preferred-plan {
        background-color: #f3faf2;
    }
</style>

<div class="@GetPlanClasses()" style="@GetPlanBorderStyle()">
    <SfTooltip Content="@TagLine">
        <h1><b>@Plan</b></h1>
    </SfTooltip>

    <div class="price">
        $@price<span>
            / month
        </span>
    </div>

    @if (Plan == Plan.Flex)
    {
        <SfSlider TValue="int" Width="200" Min="1" Max="10"
                  Value="@quantity">
            <SliderEvents TValue="int" OnChange="OnChange"></SliderEvents>
        </SfSlider>
        <p class="slider-caption">select a quantity</p>
    }

    <div class="benefits-container">
        @foreach (var benefit in benefits!)
        {
            <div class="benefit">
                <SfTooltip Content="@benefit.Tooltip">
                    @benefit.GetFragment()
                </SfTooltip>
            </div>
        }
    </div>
    <br />
    <button>Choose Plan</button>
</div>

@code {
    bool isChecked = true;
    int quantity = 1;
    double price;
    bool showSlider;
    List<Benefit>? benefits;

    protected override void OnInitialized()
    {
        benefits = Plan.ToBenefits(quantity);
        showSlider = Plan == Plan.Flex;

        UpdatePrice();
    }

    [Parameter]
    public Plan Plan { get; set; } = Plan.Free;

    [Parameter]
    public Billing Billing { get; set; } = Billing.Monthly;

    [Parameter]
    public string? TagLine { get; set; }

    void UpdatePrice()
    {
        price = PricingHelper.GetPrice(
            Plan, 69.0, quantity, Billing, 20.0);
    }

    private string GetPlanBorderStyle()
    {
        return Plan == Plan.Flex
            ? "border: 5px solid #ccc;"
            : "border: 2px solid #ccc;";
    }

    private string GetPlanClasses()
    {
        var classes = "plan premium";

        if (Plan == Plan.Flex)
            classes += " preferred-plan";

        return classes;
    }

    public void OnChange(SliderChangeEventArgs<int> args)
    {
        quantity = args.Value;

        UpdatePrice();

        benefits = Plan.ToBenefits(quantity);
    }
}
