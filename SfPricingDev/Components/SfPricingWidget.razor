@using SfPricingDev.Helpers;
@using Syncfusion
@using System.Text
@using SfPricingDev.Models
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.Inputs
@using B = Syncfusion.Blazor.Buttons;

<link rel="stylesheet" href="SfPricing.css" />

<div class="@GetPlanPanelClasses()">
    <SfTooltip Content="@Plan.ToTagLine()">
        <span class="plan-name">@Plan</span>
    </SfTooltip>

    <div class="price">
        <span>@GetPriceAndBilling()</span>
    </div>

    @if (Plan == Plan.Flex)
    {
        <SfSlider TValue="int"
                  Width="200"
                  Min="1"
                  Max="25"
                  Value="@quantity">
            <SliderEvents TValue="int"
                          OnChange="OnChange" />
        </SfSlider>
        <p class="slider-caption">slide to select lots traded</p>
    }

    <ul class="benefits-list">
        @foreach (var benefit in benefits!)
        {
            <li class="benefit">
                <SfTooltip Content="@benefit.Tooltip">
                    @benefit.GetFragment()
                </SfTooltip>
            </li>
        }
    </ul>

    @if (Plan == Plan.Flex)
    {
        <div style="margin: -6px 5px 0px 5px;">
            <SfTooltip Content="Click ➡️ to validate<br/>and apply the coupon.">
                <SfCouponBox />
            </SfTooltip>
        </div>

        <div class="pay-yearly-and-save">
            Pay Yearly; Save 20%&nbsp;
            <SfSwitch CssClass="e-small"
                      @bind-Checked="prePayAndSave"
                      ValueChange="OnChange"
                      TChecked="bool?" />
        </div>

        <br />
    }

    <button class="subscribe-button">Subscribe</button>
</div>

@code {
    bool? prePayAndSave = false;
    int quantity = 1;
    double price;
    List<Benefit>? benefits;

    protected override void OnInitialized()
    {
        benefits = Plan.ToBenefits(quantity, prePayAndSave == true);

        UpdatePrice();
    }

    [Parameter]
    public Plan Plan { get; set; } = Plan.Free;

    private string GetPlanPanelClasses()
    {
        var classes = "plan-panel";

        if (Plan == Plan.Flex)
            classes += " flex-plan";
        else
            classes += " non-flex-plan";

        return classes;
    }

    void UpdatePrice()
    {
        price = Pricing.GetPrice(Plan, quantity,
            prePayAndSave == true ? Billing.Year : Billing.Month);
    }

    public void OnChange(SliderChangeEventArgs<int> args)
    {
        quantity = args.Value;

        UpdatePrice();

        benefits = Plan.ToBenefits(quantity, prePayAndSave == true);
    }

    private string GetPriceAndBilling()
    {
        var sb = new StringBuilder();

        sb.Append($"${price} / ");

        if (Plan == Plan.Flex)
            sb.Append(prePayAndSave == true ? "year" : "month");
        else
            sb.Append("month");

        return sb.ToString();
    }

    private void OnChange(B.ChangeEventArgs<bool?> args)
    {
        UpdatePrice();

        benefits = Plan.ToBenefits(quantity, prePayAndSave == true);
    }
}
