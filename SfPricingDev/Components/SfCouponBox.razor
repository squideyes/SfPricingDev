<div class="coupon-box">
    <span>🏷️</span>
    <input type="text"
           id="couponBox"
           value="@coupon"
           readonly="@processing"
           @oninput="OnInputChanged"
           onpaste="handlePaste(event)"
           onkeypress="validateInput(event)"
           placeholder="Coupon (Optional)" />
    <span @attributes="GetClearButtonAttributes()"
          @onclick="ClearCoupon"
          title="Clear">❌</span>
    <span @attributes="GetApplyButtonAttributes()"
          @onclick="ValidateCouponAsync"
          title="Apply">@actionLabel</span>
</div>

<script>
    function validateInput(event) {
        var char = event.key;

        if (!char.match(/^[0-9a-zA-Z]+$/)) {
            event.preventDefault();
        }
    }
    function handlePaste(event) {
        event.preventDefault();

        const pastedText = (event.clipboardData || window.clipboardData).getData('text');

        if (/^[a-z0-9]+$/i.test(pastedText)) {
            insertAtCaret(event.target, pastedText);
        }
    }
    function insertAtCaret(input, textToInsert) {
        const startPos = input.selectionStart;
        const endPos = input.selectionEnd;

        input.value = input.value.substring(0, startPos)
            + textToInsert + input.value.substring(endPos);

        input.selectionStart = input.selectionEnd = startPos + textToInsert.length;
    }
</script>

@code {
    private string coupon { get; set; } = "";
    private string actionLabel { get; set; } = "➡️";
    private bool processing { get; set; } = false;
    private bool buttonWasClicked { get; set; } = false; 

    private async Task ValidateCouponAsync()
    {
        if (string.IsNullOrWhiteSpace(coupon) || buttonWasClicked)
            return;

        buttonWasClicked = true;
        processing = true;
        actionLabel = "⏳";

        await Task.Delay(5000);

        actionLabel = new Random().Next(2) == 0 ? "✅" : "🚫";

        processing = false;
    }

    private bool IsInputEmpty => string.IsNullOrWhiteSpace(coupon);

    private void ClearCoupon()
    {
        if (processing)
            return;

        coupon = "";
        actionLabel = "➡️";
        processing = false;
        buttonWasClicked = false; 
    }

    private void OnInputChanged(ChangeEventArgs e)
    {
        coupon = e.Value?.ToString() ?? "";

        if (!processing)
            actionLabel = "➡️";

        StateHasChanged();
    }

    @code {
        private Dictionary<string, object> GetClearButtonAttributes()
        {
            var attributes = new Dictionary<string, object>();

            if (IsInputEmpty || processing)
                attributes.Add("class", "coupon-button disabled");
            else
                attributes.Add("class", "coupon-button");

            return attributes;
        }

        private Dictionary<string, object> GetApplyButtonAttributes()
        {
            var attributes = new Dictionary<string, object>();

            if (IsInputEmpty || buttonWasClicked)
                attributes.Add("class", "coupon-button disabled");
            else
                attributes.Add("class", "coupon-button");

            return attributes;
        }
    }
}