@code {
    private string coupon { get; set; } = "";
    private string actionLabel { get; set; } = "➡️";
    private bool processing { get; set; } = false;

    event EventHandler? OnCoupon;

    private async Task ValidateCouponAsync()
    {
        if (string.IsNullOrWhiteSpace(coupon))
            return;

        processing = true;
        actionLabel = "⏳";

        await Task.Delay(5000);

        actionLabel = new Random().Next(2) == 0 ? "✅" : "🚫";

        processing = false;
    }

    private bool IsInputEmpty => string.IsNullOrWhiteSpace(coupon);

    private void ClearCoupon()
    {
        if (processing)
            return;

        coupon = "";
        actionLabel = "➡️"; 
    }

    private void OnInputChanged(ChangeEventArgs e)
    {
        coupon = e.Value?.ToString() ?? "";

        if (!processing)
            actionLabel = "➡️"; 

        StateHasChanged(); 
    }
}

<script>
    function validateInput(event) {
        var char = event.key;

        if (!char.match(/^[0-9a-zA-Z]+$/)) {
            event.preventDefault();
        }
    }
    function handlePaste(event) {
        event.preventDefault();

        const pastedText = (event.clipboardData || window.clipboardData).getData('text');

        if (/^[a-z0-9]+$/i.test(pastedText)) {
            insertAtCaret(event.target, pastedText);
        }
    }
    function insertAtCaret(input, textToInsert) {
        const startPos = input.selectionStart;
        const endPos = input.selectionEnd;

        input.value = input.value.substring(0, startPos) 
            + textToInsert + input.value.substring(endPos);

        input.selectionStart = input.selectionEnd = startPos + textToInsert.length;
    }
</script>

<div class="coupon-input-container">
    <div class="input-wrapper">
        <span class="coupon-label">🏷️</span>
        <input type="text"
               id="couponBox"
               value="@coupon"
               @oninput="OnInputChanged"
               onpaste="handlePaste(event)"
               onkeypress="validateInput(event)"
               placeholder="Coupon Goes Here"
               readonly="@processing" />
        <button @onclick="ClearCoupon"
                title="Clear"
                disabled="@IsInputEmpty"
                class="clear-button">
            ❌
        </button>
        <button @onclick="ValidateCouponAsync"
                title="Apply"
                disabled="@IsInputEmpty"
                class="validate-button">
            @actionLabel
        </button>
    </div>
</div>

<style>
    .coupon-input-container {
        display: flex;
        justify-content: center;
    }

    .input-wrapper {
        display: flex;
        align-items: center;
        border: 2px solid #ccc;
        border-radius: 4px;
    }

    .coupon-label {
        margin: 0;
        font-size: 20px;
    }

    input {
        flex-grow: 1;
        border: none;
        padding-left: 5px;
        padding-right: 5px;
    }

        input:focus {
            outline: none;
        }

    .clear-button, .validate-button {
        background: none;
        border: none; 
        cursor: pointer;
        margin: 0; 
        padding: 0;
        font-size: 20px; 
        cursor: pointer;
    }

    button * {
        color: inherit;
    }

    button:disabled, button:disabled:hover {
        color: inherit;
        background-color: #f0f0f0; 
        cursor: default; 
    }

    .clear-button:hover, .validate-button:hover {
        background-color: transparent; 
    }

    .clear-button:disabled:hover, .validate-button:disabled:hover {
        background-color: #f0f0f0;
    }
</style>